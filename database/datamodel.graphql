type User {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt

  bio: String
  email: String!
  nameFirst: String!
  nameLast: String!
  picture: String
  securityToken: Int!
  username: String! @unique

  circleJoinRequests: [CircleJoinRequest!]! @relation(name: "UserCirclesJoinRequests", onDelete: CASCADE)
  circleInvites: [CircleInvite!]! @relation(name: "UserCirclesInvites", onDelete: CASCADE)
  circles: [Circle!]! @relation(name: "UserCircles")
  circlesOwned: [Circle!]! @relation(name: "UserOwnedCircles", onDelete: CASCADE)
  dots: [Dot!]! @relation(name: "UserDots", onDelete: CASCADE)
  followedCharities: [Charity!]!
  halos: [Halo!]! @relation(name: "UserHalos", onDelete: CASCADE)
  identity: Identity! @relation(name: "UserIdentity", onDelete: CASCADE, link: TABLE)
  loops: [Loop!]! @relation(name: "UserLoops", onDelete: CASCADE)
  preferences: Preferences! @relation(name: "UserPreferences", onDelete: CASCADE, link: TABLE)
  transactions: [Transaction!]!

  funds: [Funds!]!
}

type Dot {
  id: ID! @id
  createdAt: DateTime! @createdAt

  action: String!
  amount: Int!
  total: Int!

  user: User! @relation(name: "UserDots")
}

type Halo {
  id: ID! @id
  createdAt: DateTime! @createdAt

  key: String!
  tier: String

  user: User! @relation(name: "UserHalos")
}

type Identity {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt

  provider: IdentityProvider!
  providerID: String! @unique

  user: User! @relation(name: "UserIdentity")
}

type Loop {
  id: ID! @id
  createdAt: DateTime! @createdAt

  count: Int!

  event: Event!
  user: User! @relation(name: "UserLoops")
}

type Preferences {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt

  allowDonationEmails: Boolean! @default(value: true)
  publicProfile: Boolean! @default(value: true)

  user: User! @relation(name: "UserPreferences")
}

type Circle {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt

  description: String
  name: String! @unique
  open: Boolean! @default(value: true)

  joinRequests: [CircleJoinRequest!]! @relation(name: "CircleJoinRequests", onDelete: CASCADE)
  invites: [CircleInvite!]! @relation(name: "CircleInvites", onDelete: CASCADE)
  members: [User!]! @relation(name: "UserCircles")
  owner: User! @relation(name: "UserOwnedCircles")
}

type CircleJoinRequest {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt

  circle: Circle! @relation(name: "CircleJoinRequests")
  user: User! @relation(name: "UserCirclesJoinRequests")
}

type CircleInvite {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt

  circle: Circle! @relation(name: "CircleInvites")
  user: User! @relation(name: "UserCirclesInvites")
}

type Charity {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt

  acronym: String
  bannerCredit: String
  connectedAccountID: String
  ein: String! @unique
  expensesAdministrative: Float
  expensesFundraising: Float
  expensesOther: Float
  expensesProgram: Float
  expensesUpdated: String
  location: String!
  mission: String!
  name: String!
  phoneNumber: String!
  website: String!

  events: [Event!]!
  followers: [User!]!
}

type Event {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt

  endDate: DateTime!
  goal: Int!
  multiplier: Int
  specialEvent: String
  specialEventDescription: String
  specialEventName: String
  sponsorName: String
  sponsorWebsite: String
  startDate: DateTime!

  charity: Charity!
  donations: [Donation!]!
}

type Donation {
  id: ID! @id
  createdAt: DateTime! @createdAt

  amount: Int!
  batchKey: String!
  subBalance: Int!
  transferID: String!

  event: Event
  source: Funds
  transaction: Transaction!
}

type Funds {
  id: ID! @id
  createdAt: DateTime! @createdAt

  amountAdded: Int!
  amountNet: Int!
  chargeID: String!

  donations: [Donation!]!
  transaction: Transaction! @relation(link: TABLE)
  user: User!
}

type Transaction {
  id: Int! @id
  createdAt: DateTime! @createdAt

  balance: Int!

  donations: [Donation!]!
  funds: Funds
  user: User!
}

enum IdentityProvider {
  FACEBOOK
  GOOGLE
}
