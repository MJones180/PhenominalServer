type User {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!

  email: String!
  nameFirst: String!
  nameLast: String!
  securityToken: Int!

  identity: Identity! @relation(name: "UserIdentity", onDelete: CASCADE)
  preferences: Preferences! @relation(name: "UserPreferences", onDelete: CASCADE)
  transactions: [Transaction!]!
}


type Identity {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!

  provider: IdentityProvider!
  providerID: String! @unique

  user: User! @relation(name: "UserIdentity", onDelete: SET_NULL)
}

type Preferences {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!

  allowDonationEmails: Boolean! @default(value: "true")

  user: User! @relation(name: "UserPreferences", onDelete: SET_NULL)
}

type Charity {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!

  acronym: String
  bannerCredit: String
  ein: String! @unique
  expensesAdministrative: Float
  expensesFundraising: Float
  expensesOther: Float
  expensesProgram: Float
  expensesUpdated: String
  location: String!
  mission: String!
  name: String!
  phoneNumber: String!
  website: String!

  events: [Event!]!
}

type SpecialFundraiser {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!

  description: String!
  name: String!

  event: Event!
}

type Event {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!

  endDate: DateTime!
  goal: Int!
  multiplier: Int
  sponsorName: String
  sponsorWebsite: String
  startDate: DateTime!

  charity: Charity
  specialFundraiser: SpecialFundraiser
  donations: [Transaction!]!
}

type Transaction {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!

  amount: Int!
  balance: Int!
  stripeID: String
  type: TransactionType!

  event: Event
  user: User!
}

enum IdentityProvider {
  FACEBOOK
  GOOGLE
}

enum TransactionType {
  DONATION
  ADD_FUNDS
}
